package lpsolvetypes;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : lp_types.h:2302</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class pricerec extends Structure {
	public double theta;
	public double pivot;
	public double epspivot;
	public int varno;
	/** C type : lprec* */
	public lpsolvelib.lprec.ByReference lp;
	public byte isdual;
	public pricerec() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("theta", "pivot", "epspivot", "varno", "lp", "isdual");
	}
	/** @param lp C type : lprec* */
	public pricerec(double theta, double pivot, double epspivot, int varno, lpsolvelib.lprec.ByReference lp, byte isdual) {
		super();
		this.theta = theta;
		this.pivot = pivot;
		this.epspivot = epspivot;
		this.varno = varno;
		this.lp = lp;
		this.isdual = isdual;
	}
	public static class ByReference extends pricerec implements Structure.ByReference {
		
	};
	public static class ByValue extends pricerec implements Structure.ByValue {
		
	};
}
