package lpsolvetypes;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
/**
 * JNA Wrapper for library <b>LpSolveTypes</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class LpSolveTypesLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = "LpSolveTypes";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LpSolveTypesLibrary.JNA_LIBRARY_NAME);
	static {
		Native.register(LpSolveTypesLibrary.JNA_LIBRARY_NAME);
	}
	/** <i>native declaration : lp_types.h</i> */
	public static final int COMP_PREFERINCUMBENT = (int)-1;
	/** <i>native declaration : lp_types.h</i> */
	public static final int DEF_STRBUFSIZE = (int)512;
	/** <i>native declaration : lp_types.h</i> */
	public static final int MAXINT32 = (int)2147483647;
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_STR_MAXLEN = (int)23;
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_NOTFOUND = (int)1;
	/** <i>native declaration : lp_types.h</i> */
	public static final String LIB_STR_VERINVALID = (String)"Incompatible version";
	/** <i>native declaration : lp_types.h</i> */
	public static final String LIB_STR_NOINFO = (String)"No version data";
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_NOFUNCTION = (int)3;
	/** <i>native declaration : lp_types.h</i> */
	public static final int DYNAMIC = (int)4;
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_LOADED = (int)0;
	/** <i>native declaration : lp_types.h</i> */
	public static final int COMP_PREFERCANDIDATE = (int)1;
	/** <i>native declaration : lp_types.h</i> */
	public static final int OBJ_STEPS = (int)5;
	/** <i>native declaration : lp_types.h</i> */
	public static final long MAXUINT32 = (long)4294967295L;
	/** <i>native declaration : lp_types.h</i> */
	public static final String LIB_STR_NOTFOUND = (String)"File not found";
	/** <i>native declaration : lp_types.h</i> */
	public static final int FALSE = (int)0;
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_NOINFO = (int)2;
	/** <i>native declaration : lp_types.h</i> */
	public static final String LIB_STR_NOFUNCTION = (String)"Missing function header";
	/** <i>native declaration : lp_types.h</i> */
	public static final String INDEXVALUEMASK = (String)"%8d";
	/** <i>native declaration : lp_types.h</i> */
	public static final int CHAR_BIT = (int)8;
	/** <i>native declaration : lp_types.h</i> */
	public static final int COMP_PREFERNONE = (int)0;
	/** <i>native declaration : lp_types.h</i> */
	public static final long MAXINT64 = (long)9223372036854775807L;
	/** <i>native declaration : lp_types.h</i> */
	public static final String LIB_STR_LOADED = (String)"Successfully loaded";
	/** <i>native declaration : lp_types.h</i> */
	public static final int AUTOMATIC = (int)2;
	/** <i>native declaration : lp_types.h</i> */
	public static final int LIB_VERINVALID = (int)4;
	/** <i>native declaration : lp_types.h</i> */
	public static final String RESULTVALUEMASK = (String)"%18.12g";
	/** <i>native declaration : lp_types.h</i> */
	public static final int TRUE = (int)1;
	public static class QSORTrec extends PointerType {
		public QSORTrec(Pointer address) {
			super(address);
		}
		public QSORTrec() {
			super();
		}
	};
}
