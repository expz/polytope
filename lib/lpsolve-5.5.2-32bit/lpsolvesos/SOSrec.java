package lpsolvesos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : lp_SOS.h:2809</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SOSrec extends Structure {
	/** C type : SOSgroup* */
	public lpsolvesos.SOSgroup.ByReference parent;
	public int tagorder;
	/** C type : char* */
	public Pointer name;
	public int type;
	public byte isGUB;
	public int size;
	public int priority;
	/** C type : int* */
	public IntByReference members;
	/** C type : double* */
	public DoubleByReference weights;
	/** C type : int* */
	public IntByReference membersSorted;
	/** C type : int* */
	public IntByReference membersMapped;
	public SOSrec() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("parent", "tagorder", "name", "type", "isGUB", "size", "priority", "members", "weights", "membersSorted", "membersMapped");
	}
	public static class ByReference extends SOSrec implements Structure.ByReference {
		
	};
	public static class ByValue extends SOSrec implements Structure.ByValue {
		
	};
}
