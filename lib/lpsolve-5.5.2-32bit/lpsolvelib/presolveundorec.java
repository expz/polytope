package lpsolvelib;
import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : lp_lib.h:2710</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class presolveundorec extends Structure {
	/** C type : lprec* */
	public lpsolvelib.lprec.ByReference lp;
	public int orig_rows;
	public int orig_columns;
	public int orig_sum;
	/**
	 * sum_alloc+1 : Mapping of variables from solution to<br>
	 * best_solution to account for removed variables and<br>
	 * rows during presolve; a non-positive value indicates<br>
	 * that the constraint or variable was removed<br>
	 * C type : int*
	 */
	public IntByReference var_to_orig;
	/**
	 * sum_alloc+1 : Mapping from original variable index to<br>
	 * current / working index number<br>
	 * C type : int*
	 */
	public IntByReference orig_to_var;
	/**
	 * rows_alloc+1 : Storage of values of presolved fixed colums<br>
	 * C type : double*
	 */
	public DoubleByReference fixed_rhs;
	/**
	 * columns_alloc+1: Storage of values of presolved fixed rows<br>
	 * C type : double*
	 */
	public DoubleByReference fixed_obj;
	/**
	 * A matrix of eliminated data from matA<br>
	 * C type : DeltaVrec*
	 */
	public lpsolvematrix.DeltaVrec.ByReference deletedA;
	/**
	 * Affine translation vectors for eliminated primal variables<br>
	 * C type : DeltaVrec*
	 */
	public lpsolvematrix.DeltaVrec.ByReference primalundo;
	/**
	 * Affine translation vectors for eliminated dual variables<br>
	 * C type : DeltaVrec*
	 */
	public lpsolvematrix.DeltaVrec.ByReference dualundo;
	public byte OFcolsdeleted;
	public presolveundorec() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("lp", "orig_rows", "orig_columns", "orig_sum", "var_to_orig", "orig_to_var", "fixed_rhs", "fixed_obj", "deletedA", "primalundo", "dualundo", "OFcolsdeleted");
	}
	public static class ByReference extends presolveundorec implements Structure.ByReference {
		
	};
	public static class ByValue extends presolveundorec implements Structure.ByValue {
		
	};
}
