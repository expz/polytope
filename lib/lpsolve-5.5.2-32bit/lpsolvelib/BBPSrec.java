package lpsolvelib;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : lp_lib.h:2721</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class BBPSrec extends Structure {
	/** C type : lprec* */
	public lpsolvelib.lprec.ByReference lp;
	public int pseodotype;
	public int updatelimit;
	public int updatesfinished;
	public double restartlimit;
	/** C type : MATitem* */
	public lpsolvematrix.MATitem.ByReference UPcost;
	/** C type : MATitem* */
	public lpsolvematrix.MATitem.ByReference LOcost;
	/** C type : _BBPSrec* */
	public BBPSrec.ByReference secondary;
	public BBPSrec() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("lp", "pseodotype", "updatelimit", "updatesfinished", "restartlimit", "UPcost", "LOcost", "secondary");
	}
	/**
	 * @param lp C type : lprec*<br>
	 * @param UPcost C type : MATitem*<br>
	 * @param LOcost C type : MATitem*<br>
	 * @param secondary C type : _BBPSrec*
	 */
	public BBPSrec(lpsolvelib.lprec.ByReference lp, int pseodotype, int updatelimit, int updatesfinished, double restartlimit, lpsolvematrix.MATitem.ByReference UPcost, lpsolvematrix.MATitem.ByReference LOcost, BBPSrec.ByReference secondary) {
		super();
		this.lp = lp;
		this.pseodotype = pseodotype;
		this.updatelimit = updatelimit;
		this.updatesfinished = updatesfinished;
		this.restartlimit = restartlimit;
		this.UPcost = UPcost;
		this.LOcost = LOcost;
		this.secondary = secondary;
	}
	public static class ByReference extends BBPSrec implements Structure.ByReference {
		
	};
	public static class ByValue extends BBPSrec implements Structure.ByValue {
		
	};
}
